"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSpanSize = exports.getSpan = void 0;
var _constants = require("../../constants");
/**
 * Get the span for all the children of the route.
 * Handles the groups of children too
 * @param routes 
 * @returns 
 */
var getSpan = function getSpan(routes) {
  var routeGroupsSpan = 0;
  var routesSpan = 0;
  var numberOfGroups = 0;
  // filter out the groups from the routes (children)
  var childrenNotGroup = routes.filter(function (route) {
    return route.data.type !== 'Group';
  });
  childrenNotGroup.forEach(function (route) {
    var _route$children;
    // for each route, find the groups and add their maxSpan to the routeGroupsSpan
    var routeGroups = (_route$children = route.children) === null || _route$children === void 0 ? void 0 : _route$children.filter(function (child) {
      return child.data.type === 'Group';
    });
    routeGroups === null || routeGroups === void 0 ? void 0 : routeGroups.forEach(function (group) {
      numberOfGroups++;
      routeGroupsSpan += group.data.maxSpan;
    });
    // add the maxSpan of the route to the routesSpan
    routesSpan += route.data.maxSpan;
  });
  return {
    maxSpan: routeGroupsSpan + routesSpan,
    spanning: childrenNotGroup.length + numberOfGroups
  };
};

/**
 * calculate the span size from the max span
 * @param span 
 * @returns 
 */
exports.getSpan = getSpan;
var getSpanSize = function getSpanSize(span) {
  return span * _constants.NODE_WIDTH + (span - 1) * _constants.NODE_SPACING_X;
};
exports.getSpanSize = getSpanSize;