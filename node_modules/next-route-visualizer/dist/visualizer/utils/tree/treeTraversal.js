"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.postorderTraversal = void 0;
/**
 * The best way to apply some modification to the route tree using a postorder traversal.
 * Or how I call it... the saving grace of my problems here! LOL
 * @param route 
 * @param modifierFn A function that takes a route and returns a route modified in some way
 * @returns Route
 */
var postorderTraversal = function postorderTraversal(route, modifierFn) {
  if (!route.children) {
    return modifierFn(route);
  }
  route.children = route.children.map(function (child) {
    return postorderTraversal(child, modifierFn);
  }).filter(function (child) {
    return child !== null;
  });
  return modifierFn(route);
};
exports.postorderTraversal = postorderTraversal;